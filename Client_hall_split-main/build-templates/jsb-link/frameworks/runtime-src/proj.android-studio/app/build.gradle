import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion PROP_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.yangfan.qihang"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0.0"
		
		multiDexEnabled true

        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'
                    
                    def module_paths = [project.file("D:/CocosCreator_2.2.2/resources/cocos2d-x"),
                                        project.file("D:/CocosCreator_2.2.2/resources/cocos2d-x/cocos"),
                                        project.file("D:/CocosCreator_2.2.2/resources/cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
                }
            }
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
		
		debug {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
			//debug时使用release签名
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

    variant.mergeAssets.doLast {
        def sourceDir = "${buildDir}/../../../../.."

        copy {
            from "${sourceDir}/res"
            into "${outputDir}/res"
        }

        copy {
            from "${sourceDir}/subpackages"
            into "${outputDir}/subpackages"
        }

        copy {
            from "${sourceDir}/src"
            into "${outputDir}/src"
        }

        copy {
            from "${sourceDir}/jsb-adapter"
            into "${outputDir}/jsb-adapter"
        }

        copy {
            from "${sourceDir}/main.js"
            from "${sourceDir}/project.json"
            into outputDir
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: "D:/CocosCreator_2.2.2/resources/cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')
	
	implementation 'cz.msebera.android:httpclient:4.3.6'
    implementation 'com.alibaba.android:ddsharesdk:1.1.0'
    implementation 'com.android.support:multidex:1.0.1'
//    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:1.0.2'
//    https://blog.csdn.net/u010816580/article/details/109391726
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.6.4'      // 微信分身
//    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'com.google.firebase:firebase-appindexing:10.0.0'
    implementation 'com.amap.api:location:latest.integration'
//    implementation files('libs/android-async-http-1.4.9.jar')
    implementation files('libs/xianliaosdk_1.0.6.jar')
    //乡聊
    implementation files('libs/xlsdk_V2.1.jar')
    //RxPermissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'
    //RxJava2
    implementation "io.reactivex.rxjava2:rxjava:2.0.0"
    //图片框架
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    // 网易七鱼
    // implementation 'com.qiyukf.unicorn:unicorn:+'
    //请求网页的jar
//    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    //默往
    implementation files('libs/mostone-open-sdk-1.5.jar')
    implementation 'com.android.support:appcompat-v7:26.0.0-alpha1'
    //多聊
    implementation files('libs/duoliao_share_2.1.jar')
    //GVoice
    implementation files('libs/GCloudVoice.jar')
    //baiduMap
    implementation files('libs/BaiduLBS_Android.jar')
    implementation 'com.android.support:recyclerview-v7:26.0.0-alpha1'
    // uploadImage
    implementation 'com.lzy.widget:imagepicker:0.6.1'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    configurations {
        all*.exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    // implementation ('com.qiyukf.unicorn:unicorn:4.0.0') {
    implementation ('com.qiyukf.unicorn:unicorn:5.7.7') {
        exclude module: 'support-v4'
    }
}
